<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>책 on Gromit.Blog</title><link>https://gowoonsori.com/tags/%EC%B1%85/</link><description>Recent content in 책 on Gromit.Blog</description><generator>Hugo -- gohugo.io</generator><language>ko-kr</language><lastBuildDate>Wed, 27 Apr 2022 15:53:14 +0900</lastBuildDate><atom:link href="https://gowoonsori.com/tags/%EC%B1%85/index.xml" rel="self" type="application/rss+xml"/><item><title>데이터 중심 애플리케이션 설계</title><link>https://gowoonsori.com/blog/books/designing-data-intensive-applications/</link><pubDate>Wed, 27 Apr 2022 15:53:14 +0900</pubDate><guid>https://gowoonsori.com/blog/books/designing-data-intensive-applications/</guid><description>이 책은 총 3부로 구성되어 1부에서는 근본 개념에 대해 설명하고 2부에서는 데이터를 분산 저장하기 위한 내용을, 3부에서는 한 데이터셋에서 다른 데이터셋을 파생하는 시스템애 대해 설명한다. 1장. 데이터 시스템의 기초 1) 신뢰성 잘못될 수 있는 일을 결함이라 부른다. 이 결함을 예측하고 대처할 수 있는 시스템을 내 결함성/탄력성을 가졌다고 말할 수 있다</description></item><item><title>Go in Action</title><link>https://gowoonsori.com/blog/books/go-in-action/</link><pubDate>Tue, 29 Mar 2022 22:22:01 +0900</pubDate><guid>https://gowoonsori.com/blog/books/go-in-action/</guid><description>저는 개인적으로 GoLang을 접한지는 꽤 되었습니다. 제가 Go를 학습할때는 인터넷을 통해 충분히 학습할 수 있었는 데, 키워드들이 많지 않았고 http://golang.site 에 대부분 필요한 내용은 설명되어있어 무리없이 학습할 수 있었습니다. 그런데 책을 구매하게 된 이유는 요즘 읽을 책이 마땅치 않았기도 하고, Go 책을 개인적으로 소장하고 싶어 구매해본 책입니다. 책이 나온</description></item><item><title>디지털 트랜스포메이션 엔진(ACCELERATE)</title><link>https://gowoonsori.com/blog/books/accelerate/</link><pubDate>Wed, 23 Mar 2022 15:28:07 +0900</pubDate><guid>https://gowoonsori.com/blog/books/accelerate/</guid><description>제목부터 낯선 이 디지털 트랜스포메이션 엔진이라는 책은 Redit을 통해 처음 접하게 되었고, 책의 원제목은 ACCELERATE:The Science Of Lean Software and DevOps:Building and Scaling High Performing Techonology Oragnizations 이다. 이름만 들었을때는 책 내용이 굉장히 어려워 보인다. 하지만, 쪽수도 얼마 안되고 내용이 재미있어 굉장이 빨리 읽힌 책이었다. 책의 전체적인 내용은 설문조사와 연구를 통해 DevOps가 소프트웨어의 전달</description></item><item><title>가상면접 사례로 배우는 대규모 설계 기초</title><link>https://gowoonsori.com/blog/books/large-scale-system-design-learned-from-virtual-interviews/</link><pubDate>Mon, 21 Mar 2022 22:30:51 +0900</pubDate><guid>https://gowoonsori.com/blog/books/large-scale-system-design-learned-from-virtual-interviews/</guid><description>나는 얇은 책이거나 꼭 소장할 책이 아니라면 주로 알라딘 에서 ebook으로 책을 구매해서 읽는다.(전공 서적은 주로 너무 두꺼워 집에 둘 곳이 없다&amp;hellip;) 책을 구매한 날도 알라딘에 어떤 ebook이 등록되었나 보고 있었고, 이 책의 제목이 굉장히 흥미를 끌었고 바로 구매를 해버렸다. 처음 구매후, 11장 까지는 굉장히 재미있게 읽어가다가</description></item><item><title>도메인 주도 설계로 시작하는 마이크로 서비스 개발</title><link>https://gowoonsori.com/blog/books/developing-ms-starting-with-ddd/</link><pubDate>Mon, 27 Dec 2021 11:41:53 +0900</pubDate><guid>https://gowoonsori.com/blog/books/developing-ms-starting-with-ddd/</guid><description>1. 마이크로서비스를 위한 조건 1) 업무 기능 중심의 팀 기술별로 팀이 나눠지게 되면 서비스 한개를 개발하는데 많은 의사소통이 필요하고 의사결정이 느려진다. 업무기능을 중심으로 다양한 기술을 가진 사람들이 하나의 팀이 되어 서비스를 만들어야 한다. 2) 폴리글랏 프로그래밍 각각의 서비스에 맞는 효율적인 방법론과 도구, 기술을 찾아 적용. 3) 개발 생명주기</description></item><item><title>오브젝트: 코드로 이해하는 객체지향 설계</title><link>https://gowoonsori.com/blog/books/object/</link><pubDate>Fri, 12 Nov 2021 11:02:26 +0900</pubDate><guid>https://gowoonsori.com/blog/books/object/</guid><description>1. 객체지향 설계 설계란 코드를 배치하는 것이다. 좋은 설계란 오늘 요구하는 기능을 온전히 수행하면서 내일의 변경을 매끄럽게 수용할 수 있는 설계 요구사항은 항상 변하기 마련이다. 2. 객체지향 프로그래밍 부모 클래스에 기본적인 알고리즘의 흐름을 구현하고 중간에 필요한 처리를 자식 클래스에게 위임하는 디자인 패턴을 TEMPLATE METHOD 패턴 이라고 한다. 자식 클래스가</description></item><item><title>돈버는 말투, 돈 버리는 말투</title><link>https://gowoonsori.com/blog/books/speech/</link><pubDate>Fri, 23 Apr 2021 15:09:03 +0900</pubDate><guid>https://gowoonsori.com/blog/books/speech/</guid><description>저자는 일본인으로 우리 한국과 일부 사회상이 안맞는 부분이 있긴 하지만 전체적으로 공감할 만한 부분들이 많았고 책도 양이 많지 않아 금방 읽힌 책이었으며, 책을 읽다보면 당연한 소리를 하고있는 것 같지만 그 당연한 것들을 지키기가 어려운 것이기에 공감한 부분들을 이곳에 정리해두려고 한다. 1. 자신의 업무 철학 확립 자신만의 업무 철학을 물었을때는 이것에 대</description></item><item><title>5분 와인</title><link>https://gowoonsori.com/blog/books/5minute-wine/</link><pubDate>Wed, 21 Apr 2021 19:23:15 +0900</pubDate><guid>https://gowoonsori.com/blog/books/5minute-wine/</guid><description>제목에서 그대로 보이듯이 와인에 대해 깊고 많은 역사를 알려주는 책이 아닌 집에서 보관방법, 와인 구매장소, 마트에서 좋은 와인 고르기, 선물용 와인 등 과 같이 가벼운 내용위주의 책들이라 간단하게 보기 좋고 책에서 언급하는 대로 아는 체,있어보이는 척 하기에 괜찮은 책이다. 샴페인을 한번 먹어본 이후로 화이트와인과 스파클링 와인에 빠져서 화이트와인을</description></item><item><title>Clean Code</title><link>https://gowoonsori.com/blog/books/cleancode/</link><pubDate>Fri, 22 Jan 2021 10:32:58 +0900</pubDate><guid>https://gowoonsori.com/blog/books/cleancode/</guid><description>1장. 깨끗한 코드 코드 품질을 측정하는 유일한 척도 = 분당 내지르는 &amp;lsquo;WTF!&amp;rsquo; 횟수 코드는 요구사항을 상세히 표현하는 수단 ( 기계가 실행할 정도로 상세하게 요구사항을 명시하는 작업 = 프로그래밍 ) 작성자가 아닌 사람도 읽고 고치기 쉽고 단순하고 직접적이다 중복을 피하고 한 기능만 수행하게 작제 추상화하기 프로그래밍은 코드를 읽는 시간 대 짜는 시간 비율이 9:1 잘</description></item></channel></rss>