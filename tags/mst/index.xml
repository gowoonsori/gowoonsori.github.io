<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>MST on Gromit.Blog</title><link>https://gowoonsori.com/tags/mst/</link><description>Recent content in MST on Gromit.Blog</description><generator>Hugo -- gohugo.io</generator><language>ko-kr</language><lastBuildDate>Mon, 12 Apr 2021 19:28:53 +0900</lastBuildDate><atom:link href="https://gowoonsori.com/tags/mst/index.xml" rel="self" type="application/rss+xml"/><item><title>[MST] Prim 알고리즘</title><link>https://gowoonsori.com/blog/algorithms/prim/</link><pubDate>Mon, 12 Apr 2021 19:28:53 +0900</pubDate><guid>https://gowoonsori.com/blog/algorithms/prim/</guid><description>우선순위 큐의 방법을 이용하는 알고리즘으로 vertex를 한개씩 선택하며 최소 비용의 edge를 찾는 방법이다. decrease-key의 개념을 이용하며 decrease-key는 현재 계산된 v노드까지의 거리보다 현재 노드 u부터 v까지의 경로가 더 작다면 값을 갱신해주는 방법을 이용한다. 1. 특징 정점 선택 기반 시작 정점부터 출발하여</description></item><item><title>[MST] Kruskal 알고리즘</title><link>https://gowoonsori.com/blog/algorithms/kruskal/</link><pubDate>Mon, 12 Apr 2021 19:19:18 +0900</pubDate><guid>https://gowoonsori.com/blog/algorithms/kruskal/</guid><description>그래프 중에서 MST (Minumum Spannig Tree) 를 찾는 알고리즘중에 하나로 Union-Find알고리즘을 이용하며, 간선 (edge)의 가중치(weight)를 오름차순으로 정렬하여 가중치가 사이클이 생기지 않는 낮은 간선을 먼저 선택하는 방법이다. 사이클의 여부를 확인할때 union-find 알고리즘을 이용하여 찾는 알고리즘이다. union find 알고리즘 설명 보기 1. 특징 탐욕적인 방</description></item></channel></rss>